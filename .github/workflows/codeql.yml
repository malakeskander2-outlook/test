name: Security Scan Before Merge

on:
  pull_request:
    branches:
      - production
      - main

jobs:
  scan:
    name: Run Malicious Code Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          npm install # or pip install -r requirements.txt
          # adapt based on your stack

      - name: Run malicious code scan
        id: scan
        run: |
          echo "Scanning for malicious patterns..."
          # Example: simple grep scan (replace with your tool)
          MALICIOUS=$(grep -R -E "eval\(|base64_decode|exec|shell_exec|curl|wget" . || true)
          if [ ! -z "$MALICIOUS" ]; then
            echo "❌ Malicious code found:"
            echo "$MALICIOUS"
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "✅ No malicious code found."
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: Send Email Notification (if malicious)
        if: steps.scan.outputs.found == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "🚨 Malicious Code Detected in PR #${{ github.event.pull_request.number }}"
          body: |
            Malicious code was detected in this PR:
            ${{ github.event.pull_request.html_url }}
            Please review immediately.
          to: "security-team@example.com"
          from: "github-bot@example.com"
        continue-on-error: true

      - name: Fail workflow if malicious
        if: steps.scan.outputs.found == 'true'
        run: |
          echo "Stopping merge due to malicious code."
          exit 1

  approve:
    name: Manual Approval for Production Merge
    needs: scan
    if: needs.scan.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          approvers: malak@example.com,admin@example.com
          secret: ${{ secrets.GITHUB_TOKEN }}
